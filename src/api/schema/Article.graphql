# import User from 'User.graphql'
enum ArticleContentType {
  markdown
}

type Article {
  _id: String!
  key: String!
  contentType: ArticleContentType!
  title: String!
  content: String!
  author: User
}

input ListArticlesFilter {
  contentType: ArticleContentType
}

input ListArticlesOptions {
  filter: ListArticlesFilter
  pagination: PaginationOptions
}

type ListArticlesResult {
  items: [Article!]!
}

type Query {
  getArticleByKey(key: String!): Article!
  listArticles(options: ListArticlesOptions!): ListArticlesResult!
}

input CreateArticlePayload {
  contentType: ArticleContentType!
  title: String!
  content: String!
}

input UpdateArticlePayload {
  title: String
  content: String
}

type DeleteArticleResponse {
  _id: String!
  success: Boolean!
}

type Mutation {
  createArticle(payload: CreateArticlePayload!): Article!
  updateArticle(id: String!, payload: UpdateArticlePayload!): Article!
  deleteArticle(id: String!): DeleteArticleResponse!
}

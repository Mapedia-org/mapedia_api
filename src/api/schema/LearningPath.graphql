type LearningPath {
  _id: String!
  name: String!
  description: String
  resourceItems: [LearningPathResourceItem!]
}

type LearningPathResourceItem {
  resource: Resource!
  learningPathId: String!
  tags: [String!]
  note: String
}

input CreateLearningPathPayload {
  name: String!
  description: String
  resourceItems: [CreateLearningPathResourceItem!]
}

input CreateLearningPathResourceItem {
  resourceId: String!
  tags: [String!]
  note: String
}

type DeleteLearningPathResult {
  success: Boolean!
  _id: String!
}

# input PutLearningPathPayload {
#   name: String!
#   description: String
#   resources: [CreateLearningPathResourceItem!]
# }

# input PutLearningPathResourceItem {
#   resourceId: String!
#   tags: [String!]
#   description: String
# }

type Mutation {
  createLearningPath(payload: CreateLearningPathPayload!): LearningPath!
  putLearningPath(_id: String!, payload: CreateLearningPathPayload!): LearningPath!
  deleteLearningPath(_id: String!): DeleteLearningPathResult!
}

type Query {
  getLearningPath(_id: String!): LearningPath!
}

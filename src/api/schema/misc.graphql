# import PaginationOptions from 'common/PaginationOptions.graphql'
# import CurrentUser from 'User.graphql'
# import Topic from 'Topic.graphql'
# import LearningPath from 'LearningPath.graphql'
# import Resource from 'Resource.graphql'

type GetHomePageDataResults {
  currentUser: CurrentUser
  # recommendedLearningGoals: [LearningGoal!]!
  recommendedLearningPaths: [LearningPath!]!
}

input GlobalSearchOptions {
  pagination: PaginationOptions
}

union SearchResultEntity = Topic | Resource | LearningPath

type SearchResult {
  entity: SearchResultEntity!
  score: Float!
}
type GlobalSearchResults {
  results: [SearchResult!]!
}

type GetTopLevelTopicsResults {
  items: [Topic!]!
}

type Query {
  getHomePageData: GetHomePageDataResults!
  getTopLevelTopics: GetTopLevelTopicsResults!
  globalSearch(query: String!, options: GlobalSearchOptions): GlobalSearchResults!
}
